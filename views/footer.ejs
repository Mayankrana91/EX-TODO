<style>
  .footer {
    padding: 1rem; text-align: center; font-size: 0.9rem; color: #888;
    background: #fff; border-top: 1px solid #ddd;
  }

  /* Modal */
  .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0; top: 0;
    width: 100%; height: 100%;
    background: rgba(0,0,0,0.3);
    justify-content: center;
    align-items: flex-start;
    padding-top: 80px;
  }

  .modal-content {
    background: #fff;
    padding: 1rem 1.2rem;
    border-radius: 10px;
    width: 500px;
    max-width: 95%;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    animation: fadeIn 0.25s ease;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  .modal-title {
    font-size: 1.1rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  /* Inputs */
  .modal-content input[type="text"],
  .modal-content textarea {
    width: 100%;
    border: none;
    border-bottom: 1px solid #ddd;
    padding: 0.5rem;
    font-size: 1rem;
    margin-bottom: 0.8rem;
    outline: none;
  }

  textarea { resize: none; height: 60px; }

  /* Options row */
  .options-row {
    display: flex;
    flex-wrap: wrap;
    gap: 0.6rem;
    margin-bottom: 0.8rem;
  }

  .dropdown { position: relative; display: inline-block; }

  .opt-btn {
    background: #f7f7f7;
    border: 1px solid #ddd;
    padding: 0.4rem 0.8rem;
    border-radius: 6px;
    font-size: 0.85rem;
    cursor: pointer;
    position: relative;
  }
  .opt-btn:hover { background: #eee; }

  /* Popovers */
  .popover {
    display: none;
    position: absolute;
    top: 120%; left: 0;
    background: white;
    border: 1px solid #ddd;
    padding: 1rem;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    z-index: 2000;
    width: 250px;
  }
  .popover .option { padding: 0.5rem; cursor: pointer; border-radius: 6px; }
  .popover .option:hover { background: #f5f5f5; }

  /* Actions */
  .actions { display: flex; justify-content: flex-end; margin-top: 1rem; gap: 0.6rem; }
  .cancel { background: none; border: none; color: #555; cursor: pointer; font-size: 0.9rem; }
  .cancel:hover { color: #111; }
  .submit {
    background: #ff6b6b; color: white; border: none;
    padding: 0.5rem 1rem; border-radius: 6px; cursor: pointer;
    font-weight: 600; font-size: 0.9rem;
  }
  .submit:hover { background: #e04e4e; }
</style>

<div class="footer">
  üåø ExTodo &copy; <%= new Date().getFullYear() %>
</div>

<!-- üîΩ Add Task Modal -->
<div id="addTaskModal" class="modal">
  <div class="modal-content">
    <h3 class="modal-title">Add Task</h3>
    <form action="/home/add" method="POST">
      <input type="hidden" name="username" value="<%= username %>">

      <input type="text" name="task" placeholder="Task name..." required>
      <textarea name="description" placeholder="Description (optional)"></textarea>

      <div class="options-row">
        <!-- Category -->
        <div class="dropdown">
          <button type="button" class="opt-btn" id="categoryBtn">üìÇ Category</button>
          <div class="popover" id="categoryPopover">
            <div class="option" data-value="General">General</div>
            <div class="option" data-value="Work">Work</div>
            <div class="option" data-value="Personal">Personal</div>
          </div>
        </div>

        <!-- Priority -->
        <div class="dropdown">
          <button type="button" class="opt-btn" id="priorityBtn">‚ö° Priority</button>
          <div class="popover" id="priorityPopover">
            <div class="option" data-value="Low">Low</div>
            <div class="option" data-value="Medium">Medium</div>
            <div class="option" data-value="High">High</div>
          </div>
        </div>

        <!-- Date -->
        <div class="dropdown">
          <button type="button" class="opt-btn" id="dateBtn">üìÖ Date</button>
          <div class="popover" id="datePopover">
            <div class="option" data-value="<%= new Date().toISOString().split('T')[0] %>">Today</div>
            <div class="option" data-value="<%= new Date(Date.now() + 86400000).toISOString().split('T')[0] %>">Tomorrow</div>
            <div class="option" data-value="<%= new Date(Date.now() + 7*86400000).toISOString().split('T')[0] %>">Next Week</div>
            <div>
              <label style="font-size:0.8rem;color:#555;">Custom:</label>
              <input type="datetime-local" class="custom-date" />
            </div>
          </div>
        </div>

        <!-- Reminder -->
        <div class="dropdown">
          <button type="button" class="opt-btn" id="reminderBtn">‚è∞ Reminder</button>
          <div class="popover" id="reminderPopover">
            <div class="option" data-value="0">At time of task</div>
            <div class="option" data-value="5">5 minutes before</div>
            <div class="option" data-value="30">30 minutes before</div>
            <div class="option" data-value="60">1 hour before</div>
            <div class="option" data-value="1440">1 day before</div>
            <div>
              <label style="font-size:0.8rem;color:#555;">Custom:</label>
              <input type="datetime-local" class="custom-reminder" />
            </div>
          </div>
        </div>
      </div>

      <div class="actions">
        <button type="button" id="cancelTaskBtn" class="cancel">Cancel</button>
        <button type="submit" class="submit">Add Task</button>
      </div>
    </form>
  </div>
</div>

<!-- üîΩ Edit Task Modal -->
<div id="editTaskModal" class="modal">
  <div class="modal-content">
    <h3 class="modal-title">Edit Task</h3>
    <form id="editTaskForm" action="/home/edit" method="POST">
      <input type="hidden" name="username" value="<%= username %>">
      <input type="hidden" name="taskId" id="editTaskId">

      <input type="text" name="task" id="editTaskText" required>
      <textarea name="description" id="editTaskDescription" placeholder="Description (optional)"></textarea>

      <div class="options-row">
        <div class="dropdown">
          <button type="button" class="opt-btn" id="editPriorityBtn">‚ö° Priority</button>
          <div class="popover" id="editPriorityPopover">
            <div class="option" data-value="Low">Low</div>
            <div class="option" data-value="Medium">Medium</div>
            <div class="option" data-value="High">High</div>
          </div>
        </div>

        <div class="dropdown">
          <button type="button" class="opt-btn" id="editDateBtn">üìÖ Date</button>
          <div class="popover" id="editDatePopover">
            <div>
              <label>Custom:</label>
              <input type="datetime-local" id="editTaskDeadline">
            </div>
          </div>
        </div>

        <div class="dropdown">
          <button type="button" class="opt-btn" id="editReminderBtn">‚è∞ Reminder</button>
          <div class="popover" id="editReminderPopover">
            <div class="option" data-value="0">At time of task</div>
            <div class="option" data-value="5">5 minutes before</div>
            <div class="option" data-value="30">30 minutes before</div>
            <div class="option" data-value="60">1 hour before</div>
            <div class="option" data-value="1440">1 day before</div>
            <div>
              <label>Custom:</label>
              <input type="datetime-local" id="editTaskReminder">
            </div>
          </div>
        </div>
      </div>

      <div class="actions">
        <button type="button" id="cancelEditBtn" class="cancel">Cancel</button>
        <button type="submit" class="submit">Save Changes</button>
      </div>
    </form>
  </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", () => {
  function openModal(modal) { if (modal) modal.style.display = "flex"; }
  function closeModal(modal) { if (modal) modal.style.display = "none"; }

  // ----- Add modal -----
  const addModal = document.getElementById("addTaskModal");
  const addTrigger = document.getElementById("addTaskBtn");
  const addCancel = document.getElementById("cancelTaskBtn");
  if (addTrigger) addTrigger.addEventListener("click", () => openModal(addModal));
  if (addCancel) addCancel.addEventListener("click", () => closeModal(addModal));

  // ----- Edit modal -----
  const editModal = document.getElementById("editTaskModal");
  const cancelEditBtn = document.getElementById("cancelEditBtn");
  if (cancelEditBtn) cancelEditBtn.addEventListener("click", () => closeModal(editModal));

  window.addEventListener("click", (e) => {
    if (e.target === addModal) closeModal(addModal);
    if (e.target === editModal) closeModal(editModal);
  });

  // ----- Popover setup -----
  function setupPopover(btnId, popId, fieldName, icon) {
    const btn = document.getElementById(btnId);
    const pop = document.getElementById(popId);
    if (!btn || !pop) return;

    btn.addEventListener("click", (e) => {
      e.stopPropagation();
      document.querySelectorAll(".popover").forEach(p => { if (p !== pop) p.style.display = "none"; });
      pop.style.display = pop.style.display === "block" ? "none" : "block";
    });

    // Predefined option
    pop.querySelectorAll(".option").forEach(opt => {
      opt.addEventListener("click", () => {
        btn.innerText = `${icon} ${opt.textContent}`;
        pop.style.display = "none";

        const form = btn.closest("form");
        if (form) {
          let hidden = form.querySelector(`input[name="${fieldName}"]`);
          if (!hidden) {
            hidden = document.createElement("input");
            hidden.type = "hidden";
            hidden.name = fieldName;
            form.appendChild(hidden);
          }
          hidden.value = opt.dataset.value || opt.textContent.trim();
        }
      });
    });

    // Custom date normalization for deadline
// Custom date (for deadline)
const customDate = pop.querySelector(".custom-date");
if (customDate) {
  customDate.addEventListener("change", () => {
    const raw = customDate.value; // e.g. "2025-10-02T15:30"
    const displayDate = raw ? raw.split("T")[0] : ""; // show only YYYY-MM-DD on button
    btn.innerText = `${icon} ${displayDate}`;

    const form = btn.closest("form");
    if (form) {
      let hidden = form.querySelector(`input[name="${fieldName}"]`);
      if (!hidden) {
        hidden = document.createElement("input");
        hidden.type = "hidden";
        hidden.name = fieldName; // "deadline"
        form.appendChild(hidden);
      }
      hidden.value = raw; // ‚úÖ Save full datetime
    }
    pop.style.display = "none";
  });
}


    // Custom reminder (keep full datetime)
    const customReminder = pop.querySelector(".custom-reminder");
    if (customReminder) {
      customReminder.addEventListener("change", () => {
        btn.innerText = `${icon} Custom`;
        const form = btn.closest("form");
        if (form) {
          let hidden = form.querySelector(`input[name="reminder"]`);
          if (!hidden) {
            hidden = document.createElement("input");
            hidden.type = "hidden";
            hidden.name = "reminder";
            form.appendChild(hidden);
          }
          hidden.value = customReminder.value;
        }
        pop.style.display = "none";
      });
    }

    document.addEventListener("click", (e) => {
      if (!pop.contains(e.target) && e.target !== btn) pop.style.display = "none";
    });
  }

  // Apply popovers
  setupPopover("categoryBtn", "categoryPopover", "category", "üìÇ");
  setupPopover("priorityBtn", "priorityPopover", "priority", "‚ö°");
  setupPopover("dateBtn", "datePopover", "deadline", "üìÖ");
  setupPopover("reminderBtn", "reminderPopover", "reminderOffset", "‚è∞");

  setupPopover("editPriorityBtn", "editPriorityPopover", "priority", "‚ö°");
  setupPopover("editDateBtn", "editDatePopover", "deadline", "üìÖ");
  setupPopover("editReminderBtn", "editReminderPopover", "reminder", "‚è∞");

  // Edit button logic
  const editBtns = document.querySelectorAll(".edit-btn");
  editBtns.forEach(btn => {
    btn.addEventListener("click", () => {
      document.getElementById("editTaskId").value = btn.dataset.id;
      document.getElementById("editTaskText").value = btn.dataset.text || "";
      document.getElementById("editTaskDescription").value = btn.dataset.description || "";
      document.getElementById("editTaskDeadline").value = btn.dataset.deadline || "";
      document.getElementById("editTaskReminder").value = btn.dataset.reminder || "";
      openModal(editModal);
    });
  });
});
</script>
